{{ define "cf.affinity.2" }}
{{ tpl (readFile "affinity.yaml.gotmpl") . | indent 2 }}
{{ end }}

{{ define "cf.affinity.4" }}
{{ tpl (readFile "affinity.yaml.gotmpl") . | indent 4 }}
{{ end }}

prometheus-node-exporter:
  resources:
    limits:
      cpu: '0.1'
      memory: 48Mi
    requests:
      cpu: '0.02'
      memory: 32Mi

alertmanager:
  config:
{{ tpl (readFile "alertmanager.yaml.gotmpl") . | indent 4 }}
  templateFiles:
    alerts.tmpl: |
{{ tpl (readFile "alerts.tmpl.gotmpl") . | indent 6 }}
  alertmanagerSpec:
    resources:
      limits:
        cpu: '0.5'
        memory: 64Mi
      requests:
        cpu: '0.1'
        memory: 48Mi
    routePrefix: /alertmanager/
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: [ReadWriteOnce]
          resources:
            requests:
              storage: 2Gi
{{ template "cf.affinity.4" . }}

grafana:
  resources:
    limits:
      cpu: '0.1'
      memory: 128Mi
    requests:
      cpu: '0.02'
      memory: 96Mi
  grafana.ini:
    server:
      root_url: '%(protocol)s://%(domain)s/grafana/'
      serve_from_sub_path: 'true'
  {{ if hasKey .Values "grafana_pass" }}
  {{ if hasKey .Values "grafana_user" }}
  adminUser: {{ .Values.grafana_user | quote }}
  {{ end }}
  adminPassword: {{ .Values.grafana_pass | quote }}
  {{ else }}
    auth:
      disable_login_form: 'true'
      disable_signout_menu: 'true'
    auth.basic:
      enabled: 'false'
    auth.anonymous:
      enabled: 'true'
      org_role: Admin
  {{ end }}
  persistence:
    enabled: true
    size: 10Gi
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'codefresh'
          orgId: 1
          folder: Codefresh
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards/codefresh
  dashboards:
    codefresh:
{{ tpl (readFile "dashboards.yaml.gotmpl") . | indent 6 }}
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki-boltdb.loki-boltdb:3100
      access: proxy
      jsonData:
        maxLines: 10000
{{ template "cf.affinity.2" . }}

kube-state-metrics:
  metricLabelsAllowlist:
  - nodes=[*]
  - pods=[*]
  - services=[*]
  - deployments=[*]
  - statefulsets=[*]
  - daemonsets=[*]
  resources:
    limits:
      cpu: '0.5'
      memory: 256Mi
    requests:
      cpu: '0.1'
      memory: 192Mi
{{ template "cf.affinity.2" . }}

kubeControllerManager:
  enabled: false

kubeEtcd:
  enabled: false

kubeProxy:
  enabled: false

kubeScheduler:
  enabled: false

prometheusOperator:
  resources:
    limits:
      cpu: '0.1'
      memory: 200Mi
    requests:
      cpu: '0.1'
      memory: 200Mi
  logLevel: error
{{ template "cf.affinity.2" . }}

prometheus:
  prometheusSpec:
    resources:
      limits:
        memory: {{ .Values.prom_ram | quote }}
        cpu: {{ mul 2 .Values.prom_cpu | quote }}
      requests:
        memory: {{ .Values.prom_ram | quote }}
        cpu: {{ .Values.prom_cpu | quote }}
    externalUrl: https://{{ .Values.cluster }}/prometheus/
    routePrefix: /prometheus/
    scrapeInterval: 10s
    retention: 20d
    additionalScrapeConfigs:
{{ readFile "scrape.yaml" | indent 6 }}
    storageSpec:
      volumeClaimTemplate:
        spec:
          accessModes: [ReadWriteOnce]
          resources:
            requests:
              storage: 200Gi
{{ template "cf.affinity.4" . }}

defaultRules:
  rules:
    time: false
    kubernetesApps: false
    kubernetesResources: false
    kubernetesSystem: false
    kubeApiserver: false
    kubeApiserverError: false
    kubeApiserverAvailability: false
    kubernetesStorage: false
    node: false

additionalPrometheusRules:
  - name: cf-rules
    groups:
{{ tpl (readFile "alerts.yaml.gotmpl") . | indent 6 }}
{{ readFile "dind-rules.yaml" | indent 6 }}
