- alert: DindMonitorDown
  expr: absent(count(container_start_time_seconds{container="dind-monitor",namespace="monitoring",job="kubelet"}) == 1)
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: dind-monitor containers count != 1
    summary: dind-monitor is down

- alert: PodWarningEvent
  expr: kubernetes_events{event_type!="Normal", event_reason!~"FailedScheduling|FailedCreatePodSandBox|FailedMount|FailedAttachVolume", event_kind="Pod", event_name !~ "filebeat.*" } offset 4m  unless on (event_name) kubernetes_events{event_type="Normal", event_reason="Started"}
  for: 2m
  labels:
    alertgroup: kube_event
    severity: warning
  annotations:
    message: |
      {{ $labels.event_reason }} pod={{ $labels.event_name }} ns={{ $labels.event_namespace }}
      {{ $labels.event_subobject }}
    summary: Pod warning event

- alert: PodFailedMount
  expr: kubernetes_events{event_type!="Normal", event_reason=~"FailedMount|FailedAttachVolume", event_kind="Pod", event_name !~ "filebeat.*" } offset 4m  unless on (event_name) kubernetes_events{event_type="Normal", event_reason="Started"}
  for: 2m
  labels:
    alertgroup: kube_event
    severity: warning
  annotations:
    message: |
      {{ $labels.event_reason }} pod={{ $labels.event_name }} ns={{ $labels.event_namespace }}
      {{ $labels.event_subobject }}
    summary: Pod Failed Mount

- alert: TooManyPodFailedMounts
  expr: count(ALERTS{alertstate="firing", alertname=~"PodFailedMount"}) > 10
  for: 5m
  labels:
    alertgroup: dind_storage
    severity: warning
  annotations:
    message: |
      Too many volume mount failures
    summary: Too Many Pod Failed Mount

- alert: PvcProvisionFailure
  expr: kubernetes_events{event_kind="PersistentVolumeClaim", event_reason="ProvisioningFailed"}
  for: 2m
  labels:
    alertgroup: dind_storage
    severity: warning
  annotations:
    message: |
      Failed to provision pvc {{ $labels.event_name }} in namespace={{ $labels.event_namespace }} pvc_name = {{ $labels.event_source }}
      event_source = {{ $labels.event_source }}
    summary: Failed to provision pvc

- alert: PvcProvisionFailureAccInfo
  expr: |
    (
      dind_pvc_status{phase!="Bound"}
      + on (persistentvolumeclaim) group_left (event_source, event_subobject)
      (0*label_replace(
        kubernetes_events{event_kind="PersistentVolumeClaim",event_reason="ProvisioningFailed"},
        "persistentvolumeclaim",
        "$1",
        "event_name",
        "(.*)"
      ))
    )
    and
    on (persistentvolumeclaim)
    label_replace(
      kubernetes_events{event_kind="PersistentVolumeClaim",event_reason="ProvisioningFailed"},
      "persistentvolumeclaim",
      "$1",
      "event_name",
      "(.*)"
    )
  for: 2m
  labels:
    alertgroup: dind_storage
    severity: warning
  annotations:
    message: |
      PVC Provision failure for pvc {{ $labels.persistentvolumeclaim }} namespace = {{ $labels.namespace }}
      StorageClass = {{ $labels.storageclass }} Runtime_env = {{ $labels.label_runtime_env }}
      Workflow URL = {{ $labels.workflow_url }}
      Account = {{ $labels.label_io_codefresh_accountName}}
      event_source = {{ $labels.event_source }}
      event_subobject = {{ $labels.event_subobject }}
    summary: Failed to provision pvc with acc info

- alert: TooManyPvcProvisionFailure
  expr: count by (event_source) (kubernetes_events{event_kind="PersistentVolumeClaim", event_reason="ProvisioningFailed"}) > 10
  for: 5m
  labels:
    alertgroup: dind_storage
    severity: critical
  annotations:
    message: |
      Too Many PVC Provisioning failures. event_source = {{ $labels.event_source }}
    summary: Too Many PVC Provisioner failures

- alert: dindPvcInodeUsageExceeded
  expr: |
    (docker_volume_inodes_usage > 0.9)
    + on (dind_pod_name)
    group_left(backend_volume_id, persistentvolume, workflow_url)
    (
      label_replace(
        dind_pvc_status{label_pod_name != "<no value>"},
        "dind_pod_name",
        "$1",
        "label_pod_name",
        "(.*)"
      )
      + on(label_pod_name) group_left (persistentvolume) (0*kube_persistentvolume_labels{label_codefresh_app="dind"})
      + on(label_pod_name) group_left (backend_volume_id)  (0*label_replace(dind_volume_last_mount_ts, "label_pod_name", "$1", "dind_pod_name", "(.*)"))
    )*0
  for: 20s
  labels:
    alertgroup: dind_storage
    severity: info
  annotations:
    message: |
      dind {{ $labels.dind_pod_name }} inode usage > 90%
      Runtime {{ $labels.runtime_env }}
      Namespace {{ $labels.kubernetes_namespace }}
      volume_name {{ $labels.persistentvolume }}
      backend_volume_id {{ $labels.backend_volume_id }}
      volume_name {{ $labels.persistentvolume }}
      Workflow URL {{ $labels.workflow_url }}?noAccount=true
      Account {{ $labels.io_codefresh_accountName }}
    summary: dindPvc Inode Usage Exceeded

- alert: dindPvcNoStorageAvailable
  expr: |
    (docker_volume_kb_available < 5e+05)
    + on (dind_pod_name)
    group_left(backend_volume_id, persistentvolume, workflow_url)
    (
      label_replace(
        dind_pvc_status{label_pod_name != "<no value>"},
        "dind_pod_name",
        "$1",
        "label_pod_name",
        "(.*)"
      )
      + on(label_pod_name) group_left (persistentvolume) (0*kube_persistentvolume_labels{label_codefresh_app="dind"})
      + on(label_pod_name) group_left (backend_volume_id)  (0*label_replace(dind_volume_last_mount_ts, "label_pod_name", "$1", "dind_pod_name", "(.*)"))
    )*0
  for: 20s
  labels:
    alertgroup: dind_storage
    severity: info
  annotations:
    message: |
      dind {{ $labels.dind_pod_name }} available storage less then 500M
      Runtime {{ $labels.runtime_env }}
      Namespace {{ $labels.kubernetes_namespace }}
      backend_volume_id {{ $labels.backend_volume_id }}
      volume_name {{ $labels.persistentvolume }}
      Workflow URL {{ $labels.workflow_url }}?noAccount=true
      Account {{ $labels.io_codefresh_accountName }}
    summary: dindPvc no storage available 

- alert: dockerOnDindIsDown
  expr: docker_up == 0
  for: 1m
  labels:
    alertgroup: dind_docker
    severity: warning
  annotations:
    message: |
      dockerd failed on dind {{ $labels.dind_pod_name }}
      Namespace {{ $labels.kubernetes_namespace }}
      Workflow URL https://g.codefresh.io/build/{{ $labels.io_codefresh_workflowId }}?noAccount=true
      Account {{ $labels.io_codefresh_accountName }}
    summary: dockerd failed on dind pod

- alert: dindRunTooLong
  expr: dind_pod_status{pod=~"dind.*", phase="Running"} == 1
  for: 180m
  labels:
    alertgroup: dind_problem
    severity: info
    handler: "true"
  annotations:
    message: |
      {{ $labels.pod }} has run more than 180 min on runtimeEnvironment {{ $labels.label_runtime_env }} in namespace {{ $labels.namespace }} on instance {{ $labels.instance }}
      Workflow URL {{ $labels.workflow_url }}
      Account {{ $labels.label_io_codefresh_accountName }}
    summary: dind run more than 3h
    handler: delete-kubeobj {{ $labels.namespace }} pod/{{ $labels.pod }}

- alert: dindRunsWithoutEngine
  expr: up{app="dind"} unless on(workflow_url) up{app="runtime"} == 1
  for: 10m
  labels:
    alertgroup: dind_problem
    severity: warning
    handler: "true"
  annotations:
    message: "{{ $labels.kubernetes_pod_name }} is running without engine on re {{ $labels.runtime_env }} in namespace {{ $labels.kubernetes_namespace }}"
    summary: dind is running without engine
    handler: delete-pod-pvc {{ $labels.kubernetes_namespace }} {{ $labels.kubernetes_pod_name }}

- alert: dindPvcWithoutDind
  expr: |
    (dind_pvc_status{phase="Bound"} == 1)
    unless
    on (label_pod_name, namespace)
    label_replace( (kube_pod_status_phase{phase = "Running" } == 1), "label_pod_name", "$1", "pod", "(.*)" )
  for: 1h
  labels:
    alertgroup: dind_problem
    severity: warning
    handler: "true"
  annotations:
    message: "PVC {{ $labels.persistentvolumeclaim }} is bound without running dind on re {{ $labels.label_runtime_env }} in namespace {{ $labels.namespace }}"
    summary: PVC is bound without running dind
    handler: delete-kubeobj {{ $labels.namespace }} pvc/{{ $labels.persistentvolumeclaim }}

- alert: engineRunTooLong
  expr: dind_pod_status{pod=~"engine.*", phase="Running"} == 1
  for: 180m
  labels:
    alertgroup: dind_problem
    severity: info
    handler: "true"
  annotations:
    message: |
      {{ $labels.pod }} has run more than 3h on runtimeEnvironment {{ $labels.label_runtime_env }} in namespace {{ $labels.namespace }} on instance {{ $labels.instance }}
      Workflow URL {{ $labels.workflow_url }}
      Account {{ $labels.label_io_codefresh_accountName }}
    summary: engine run more than 3h
    handler: delete-kubeobj {{ $labels.namespace }} pod/{{ $labels.pod }}

- alert: engineCompletedTooLongTimeAgo
  expr: kube_pod_status_phase{pod =~ "engine-.*", phase =~ "Failed|Succeeded"} == 1
  for: 3h
  labels:
    alertgroup: dind_problem
    handler: "true"
    severity: warning
  annotations:
    handler: delete-kubeobj {{ $labels.namespace }} pod/{{ $labels.pod}}
    message: |-
      pod {{ $labels.pod }} in {{ $labels.namespace }} namespace is {{$labels.phase}} more than 180 
    summary: engine pod completed too long time ago
    
- alert: dindPvcIsBoundTooLong
  expr: dind_pvc_status{phase="Bound"} == 1
  for: 183m
  labels:
    alertgroup: dind_problem
    severity: warning
    handler: "true"
  annotations:
    message: |
      dind pvc is bound too long {{ $labels.persistentvolumeclaim }} in namespace={{ $labels.namespace }}
      Runtime Env {{ $labels.label_runtime_env }}
      storageClass {{ $labels.storageclass }}
      Workflow URL {{ $labels.workflow_url }}
      Account {{ $labels.label_io_codefresh_accountName }}
    summary: dind pvc is bound too long
    handler: delete-kubeobj {{ $labels.namespace }} pvc/{{ $labels.persistentvolumeclaim }}

- alert: dindPvcPending
  expr: dind_pvc_status{phase="Pending"} == 1
  for: 1m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: |
      Cannot bound dind pvc {{ $labels.label_pod_name }}
      Runtime Env {{ $labels.label_runtime_env }}
      Namespace {{ $labels.namespace }}
      storageClass {{ $labels.storageclass }}
      Workflow URL {{ $labels.workflow_url }}
      Account {{ $labels.label_io_codefresh_accountName}}
    summary: 'dind pvc: cannot bound'

- alert: TooManyEbsPVCPending
  expr: count(dind_pvc_status{storageclass =~ ".*ebs.*", phase = "Pending"} == 1) > 8
  for: 5m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: Too Many dind EBS PVC are pending
    summary: Too Many dind EBS PVC are pending

- alert: dindPodPending
  expr: dind_pod_status{pod=~"dind.*", phase!="Running"} == 1
  for: 2m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: |
      Dind pod status = {{ $labels.phase }}: {{ $labels.pod }}
      Runtime {{ $labels.label_runtime_env }}
      namespace {{ $labels.namespace }}
      Workflow URL {{ $labels.workflow_url }}
      Account {{ $labels.label_io_codefresh_accountName }}
    summary: dind pod pending or failed

- alert: TooManyDindPodFailures
  expr: count(dind_pod_status{pod=~"dind.*", phase!~"Running|Succeeded"} == 1) > 10
  for: 15m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: Too Many dind POD Failures
    summary: Too Many dind POD Failures

- alert: DindVolumeProvisionerCpuWarning
  expr: (rate(container_cpu_user_seconds_total{pod=~"dind-volume-provisioner.*"}[5m])) / on(node) group_left() machine_cpu_cores > 0.3
  for: 10m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: 'pod {{ $labels.pod }} cpu usage warning on node {{ $labels.instance }}'
    summary: Dind Volume Provisioner CPU usage warning

- alert: DindVolumeProvisionerMemoryWarning
  expr: container_memory_usage_bytes{job="kubelet", container = "dind-volume-provisioner"} > 2000000000
  for: 10m
  labels:
    alertgroup: dind_problem
    severity: warning
  annotations:
    message: 'pod {{ $labels.pod }} memory usage warning on node {{ $labels.instance }}'
    summary: Dind Volume Provisioner Memory usage warning
