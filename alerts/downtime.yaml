- alert: K8sEndpointsDown
  expr: up{job="k8s-endpoints"} == 0
  for: 2m
  labels:
    alertgroup: downtime
    severity: warning
  annotations:
    message: kubeapi is down on {{ $labels.instance }}
    summary: Kubernetes API server is down

- alert: NodeDown
  expr: up{job = "node"} == 0
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: |
      {{ $labels.node_label_kubernetes_io_role }} {{ $labels.instance }} {{ $labels.node_address_InternalIP }} / {{ $labels.node_address_ExternalIP }} is down.
      {{ $labels.node_label_node_type }} {{ $labels.runtime_env }}
    summary: Kubernetes Node is down

- alert: KubeApiDown
  expr: up{job="kubelet",node_label_kubernetes_io_role="master"} unless on (instance) container_start_time_seconds{container = "kube-apiserver"}
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: kube-apiserver is down
    summary: kube-apiserver is down {{ $labels.node_label_kubernetes_io_role }} {{ $labels.instance }} {{ $labels.node_address_InternalIP }} - {{ $labels.node_address_ExternalIP }}

- alert: KubeSchedulerDown
  expr: up{job="kubelet",node_label_kubernetes_io_role="master"} unless on (instance) container_start_time_seconds{container = "kube-scheduler"}
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: kube-scheduler is down on {{ $labels.node_label_kubernetes_io_role }} {{ $labels.instance }} {{ $labels.node_address_InternalIP }} - {{ $labels.node_address_ExternalIP }}
    summary: kube-scheduler is down

- alert: KubeControllerDown
  expr: up{job="kubelet",node_label_kubernetes_io_role="master"} unless on (instance) container_start_time_seconds{container = "kube-controller-manager"}
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: kube-controller-manager is down on {{ $labels.node_label_kubernetes_io_role }} {{ $labels.instance }} {{ $labels.node_address_InternalIP }} - {{ $labels.node_address_ExternalIP }}
    summary: kube-controller-manager is down

- alert: CalicoNodeDown
  expr: up{job="kubelet"} unless on (instance) container_start_time_seconds{container = "calico-node"}
  for: 10m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: calico-node is down on {{ $labels.node }}
    summary: calico-node is down

- alert: DindVolumeProvisionerDown
  expr: absent(count(container_start_time_seconds{container="dind-volume-provisioner",job="kubelet", namespace="kube-system"}) == 1)
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: dind-volume-provisioner containers count != 1
    summary: dind-volume-provisioner is down

- alert: AlertHandlerDown
  expr: absent(count(container_start_time_seconds{container="am-alert-handler",job="kubelet"}) == 1)
  for: 2m
  labels:
    alertgroup: downtime
    severity: critical
  annotations:
    message: am-alert-handler container count != 1
    summary: Alert Handler is down

- alert: DeploymentDown
  expr: kube_deployment_status_replicas_unavailable > 0
  for: 10m
  labels:
    alertgroup: downtime
    severity: warning
  annotations:
    message: 'deployment {{$labels.deployment}} has {{$value}} replicas unavailable'
    summary: '{{$labels.deployment}}: has inssuficient replicas.'
